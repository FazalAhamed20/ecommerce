<!-- views/admin/dashboard.ejs -->
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Category Offers</title>
    <style>
        body {
        font-family: Arial, sans-serif;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    h1 {
        text-align: center;
       
    }

    button {
        padding: 10px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        margin-bottom: 20px;
        background-color: #4CAF50;
        color: white;
    }

        table {
            width: 98%;
            border-collapse: collapse;
            margin-top: 20px;
            margin-left: 40px;
            margin-right: 50px;
        }

        th,
        td {
            border: 1px solid black;
            color: black;
            padding: 8px;
            text-align: left;
        }

        th {
            background-color: #f2f2f2;
        }

        .edit-buttons {
            display: flex;
           
            margin-top: 20px;
        }

        .edit-buttons button,
        .edit-buttons input {
            padding: 10px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            margin-right: 10px;
        }

        .edit-buttons button {
            background-color: #4CAF50;
            color: white;
        }

        .edit-buttons input {
            width: 60px;
        }
    </style>
</head>

<body>
    <h1>Category Offers</h1>
    <a href="/adhome"><button>Home</button></a>
    

    <table>
        <thead>
            <tr>
                <th>Category</th>
                <th>Number of Products</th>
                <th>Offer Percentage</th>
                <th>Expiry Date</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <% categoryData.forEach(category => { %>
            <tr>
                <td><%= category.category %></td>
                <td><%= category.productCount %></td>
                <td>
                    <input type="number" id="offerInput_<%= category.category %>" value="<%= category. offerPercentage %>" placeholder="Increase %" />
                </td>
                <td>
                    <input type="date" id="expiryDateInput_<%= category.category %>" value="<%= category.expiryDate %>" />
                </td>
                <td>
                    <div class="edit-buttons">
                        <button onclick="editExpiry('<%= category.category %>')">Update</button>
                        <button style="background-color: red;" onclick="deleteOffer('<%= category.categoryid %>')">Delete</button>


                    </div>
                </td>
            </tr>
            <% }); %>
        </tbody>
    </table>

    <script>
       
    
        function editExpiry(category) {
            const expiryDateInput = document.getElementById(`expiryDateInput_${category}`);
            const editedExpiryDate = expiryDateInput.value;

            const currentDate = new Date().toISOString().split('T')[0];
        if (editedExpiryDate < currentDate) {
            alert('Expiry Date cannot be set to a date before today.');
            return;
        }

            
    
            const offerInput = document.getElementById(`offerInput_${category}`);
            const existingPercentage = parseInt(offerInput.value, 10) || 0;
    
           
            fetch(`/admin/edit-expiry-offer/${category}/${editedExpiryDate}/${existingPercentage}`, {
                method: 'POST',
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert(`The Offer for ${category} updated to ${editedExpiryDate}`);
                } else {
                    alert('Error updating expiry date and offer percentage. Please try again.');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred. Please try again.');
            });
        }
    
        const datepickers = document.querySelectorAll('.datepicker');
        datepickers.forEach(datepicker => {
            new Datepicker(datepicker, {
               
            });
        });
    </script>
    <script>
        function deleteOffer(categoryId) {
    if (confirm(`Are you sure you want to delete the offer for ${categoryId}?`)) {
        fetch(`/admin/delete-offer/${categoryId}`, {
            method: 'DELETE',
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert(`Offer for ${categoryId} deleted successfully`);
                window.location.reload();
                
            } else {
                alert('Error deleting offer. Please try again.');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('An error occurred. Please try again.');
        });
    }
}

    </script>
    
    
</body>

</html>
