
<%- include('nav') -%>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
<script src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>




<style>
  body {
    margin: 0;
    overflow: hidden; /* Prevent any potential scrollbars */
  }

  #video-container1 {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    overflow: hidden;
    z-index: -1;
    opacity: 1;
    transition: opacity 1s ease-out;
  }

  #video {
    width: 100%;
    height: 100%;
    object-fit: cover; /* Cover the entire container */
  }
</style>

<div id="video-container1">
  <video id="video" autoplay muted>
    <source src="/assets/admin panel.mp4" type="video/mp4">
    Your browser does not support the video tag.
  </video>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>

<style>
  body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f4f4f4;
    overflow-y: scroll;
  }

  header {
    position: fixed;
    top: 0;
    width: 100%;
    background-color: #333;
    color: white;
    text-align: center;
    font-size: smaller;
    z-index: 10;
    height: 60px;
  }

  nav {
    background-color: #4CAF50;
    color: white;
    padding: 10px;
  }

  nav a {
    color: white;
    text-decoration: none;
    padding: 10px;
    margin: 0 10px;
  }

  .dashboard-container {
    opacity: 0;
    transition: opacity 1s ease-out;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
    padding: 20px;
    margin-top: 30px;
  }

  .dashboard-card {
    background-color: white;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    margin: 15px;
    padding: 20px;
    width: 300px;
    text-align: center;
    max-width: 100%;
    text-align: center;
  }

  canvas {
    max-width: 100%;
    max-height: 100%;
  }

  footer {
    background-color: #333;
    color: white;
    padding: 10px;
    text-align: center;
    position: fixed;
    bottom: 0;
    width: 100%;
  }

 
  .dashboard-card i {
    font-size: 48px; /* Adjust the icon size */
    margin-bottom: 10px; /* Add some spacing between icon and text */
  }
  .time-interval-selector {
    margin-bottom: 20px;
  }
</style>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
<body>
</head>
<body>
  <header>
    <h1>Admin Dashboard</h1>
  </header>

  <div class="dashboard-container">
    <div class="dashboard-card">
      <i class="fas fa-shopping-cart"></i>
      <h2>Total Orders</h2>
      <p><%= totalOrders %></p>
    </div>

    <div class="dashboard-card">
      <i class="fas fa-box"></i>
      <h2>Total Products Sold</h2>
      <p><%= productQuantity %></p>
    </div>

    <div class="dashboard-card">
      <i class="fas fa-users"></i>
      <h2>Total Users</h2>
      <p><%= totalUsers %></p>
    </div>
   
    <div class="dashboard-graph-container">
     <!-- Add the following code to your HTML template -->
<div class="time-interval-selector">
  <label for="time-interval">Select Time Interval: </label>
  <select id="time-interval" onchange="updateChart()">
    <option value="daily">Daily</option>
    <option value="weekly">Weekly</option>
    <option value="monthly">Monthly</option>
    <option value="yearly">Yearly</option>
  </select>
</div>


      
      <canvas id="myChart" width="800" height="400"></canvas>
    </div>
    
    <div>
     <!-- Include this in your EJS template where you want to trigger the download -->
<!-- Include this in your EJS template where you want to trigger the download -->
<a href="/download-sales-report" target="_blank">Download Sales Report</a>


      
      <button id="download-pdf-button">Download PDF Report</button>
      <h2>Recently Placed Orders</h2>
      <table class="recent-orders-table">
        <thead>
          <tr>
            <th>Order ID</th>
            <th>Product</th>
            <th>Quantity</th>
            <th>Order Date</th>
          </tr>
        </thead>
        <tbody>
          <% for (const order of recentlyPlacedOrders) { %>
            <tr>
              <td><%= order.orderID %></td>
              <td><%= order.products[0].name %></td>
              <td><%= order.products[0].quantity %></td>
              <td><%= order.orderDate.toISOString().split('T')[0] %></td>
            </tr>
          <% } %>
        </tbody>
      </table>
    </div>
    
    
  </div>
 
  

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const video = document.getElementById('video');
      const videoContainer = document.getElementById('video-container1');
      const dashboardContainer = document.querySelector('.dashboard-container');
  
      video.addEventListener('ended', () => {
        // Fade out the video
        videoContainer.style.opacity = 0;
        // Show the admin content
        setTimeout(() => {
          dashboardContainer.style.opacity = 1;
        }, 1000); // Adjust the delay as needed
      });
  
     
    });


</script>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    let selectedTimeInterval = 'daily'; // Default to daily

    function updateChart() {
      selectedTimeInterval = document.getElementById('time-interval').value;
      updateChartData(selectedTimeInterval);
    }

    function updateChartData(timeInterval) {
      let timeUnit, unitStepSize, tooltipFormat;

      if (timeInterval === 'weekly') {
        timeUnit = 'week';
        unitStepSize = 1; // Display every week
        tooltipFormat = 'W YYYY'; // Week and year
      } else if (timeInterval === 'monthly') {
        timeUnit = 'month';
        unitStepSize = 1; // Display every month
        tooltipFormat = 'MMM YYYY'; // Month and year
      } else if (timeInterval === 'yearly') {
        timeUnit = 'year';
        unitStepSize = 1; // Display every year
        tooltipFormat = 'YYYY'; // Year
      } else {
        timeUnit = 'day';
        unitStepSize = 1; // Display every day
        tooltipFormat = 'MMM DD, YYYY'; // Month, day, and year
      }

      const xValues = JSON.parse('<%- xValues %>');
      const yValues = JSON.parse('<%- JSON.stringify(yValues) %>');
      
      const formattedXValues = xValues.map(dateString => formatXLabel(dateString, timeInterval));

      new Chart("myChart", {
        type: "line",
        data: {
          labels: formattedXValues,
          datasets: [{
            label: 'Number of Orders',
            fill: false,
            lineTension: 0,
            backgroundColor: "rgba(0,0,255,1.0)",
            borderColor: "rgba(0,0,255,0.1)",
            data: yValues
          }]
        },
        options: {
          scales: {
            xAxes: [{
              type: 'time',
              time: {
                unit: timeUnit,
                unitStepSize: unitStepSize,
                tooltipFormat: tooltipFormat,
              },
              scaleLabel: {
                display: true,
                labelString: 'Date'
              }
            }],
            yAxes: [{
              ticks: { min: 0, stepSize: 1 },
              scaleLabel: {
                display: true,
                labelString: 'Number of Orders'
              }
            }]
          },
          elements: {
            point: {
              radius: 5,
            },
          },
          tooltips: {
            intersect: false,
            mode: 'index',
          },
        }
      });
    }

    function formatXLabel(dateString, timeInterval) {
      const date = new Date(dateString);

      if (timeInterval === 'weekly') {
        const weekNumber = getISOWeek(date);
        return `${getOrdinal(weekNumber)} week ${date.getFullYear()}`;
      } else if (timeInterval === 'monthly') {
        return `${getMonthName(date.getMonth())} ${date.getFullYear()}`;
      } else if (timeInterval === 'yearly') {
        return `${date.getFullYear()}`;
      } else {
        return `${getMonthName(date.getMonth())} ${date.getDate()}, ${date.getFullYear()}`;
      }
    }

    function getMonthName(monthIndex) {
      const months = [
        'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',
        'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'
      ];
      return months[monthIndex];
    }

    function getISOWeek(date) {
      const d = new Date(date);
      d.setHours(0, 0, 0, 0);
      d.setDate(d.getDate() + 4 - (d.getDay() || 7));
      const yearStart = new Date(d.getFullYear(), 0, 1);
      return Math.ceil((((d - yearStart) / 86400000) + 1) / 7);
    }

    function getOrdinal(number) {
      const suffixes = ['st', 'nd', 'rd'];
      const v = number % 100;
      return number + (suffixes[(v - 20) % 10] || suffixes[v] || 'th');
    }

    document.getElementById('time-interval').addEventListener('change', function() {
      updateChart();
    });

    updateChartData(selectedTimeInterval); // Initial chart rendering
  });
</script>




  
  
  <!-- ... your existing HTML code ... -->
  
 

  <%- include('footer') -%>
</body>
</html>
